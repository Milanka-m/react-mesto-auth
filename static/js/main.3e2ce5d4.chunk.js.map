{"version":3,"sources":["contexts/CurrentUserContext.js","contexts/CardsContext.js","components/Header.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","images/icon-auth-error.svg","images/icon-auth-login.svg","components/InfoTooltip.js","components/ProtectedRoute.js","components/Login.js","components/Register.js","utils/api.js","utils/auth.js","components/App.js","reportWebVitals.js","index.js"],"names":["CurrentUserContext","React","createContext","CardsContext","Header","email","handleLogout","className","href","target","rel","exact","path","to","onClick","Card","card","onCardClick","onCardLike","onCardDelete","currentUser","useContext","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","style","backgroundImage","link","type","aria-label","name","length","Main","cards","onEditAvatar","onEditProfile","onAddPlace","avatar","about","map","Footer","Date","getFullYear","PopupWithForm","onSubmit","isOpen","title","onClose","children","nameButton","popupOpened","ImagePopup","src","alt","EditProfilePopup","onUpdateUser","useState","setName","description","setDescription","useEffect","Object","keys","e","preventDefault","value","onChange","id","placeholder","minLength","maxLength","required","EditAvatarPopup","onUpdateAvatar","avatarRef","useRef","current","ref","AddPlacePopup","nameCard","setNameCard","linkCard","setLinkCard","InfoTooltip","error","iconErrorAuth","iconRegisterAuth","ProtectedRoute","Component","component","props","loggedIn","Login","handleLogin","password","data","setData","handleChange","Register","handleRegister","message","api","address","token","groupID","this","_address","_token","_groupID","res","ok","json","Promise","reject","status","fetch","headers","authorization","then","_checkResponse","method","body","JSON","stringify","BASE_URL","checkResponse","response","withRouter","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isInfoRegisterPopupOpen","setIsInfoRegisterPopupOpen","isImagePopupOpen","setIsImagePopupOpen","selectedCard","setSelectedCard","setCurrentUser","currentCard","setCurrentCard","setCards","setLoggedIn","userEmail","setUserEmail","errorMessage","setErrorMessage","history","useHistory","handleError","console","log","closeAllPopups","jwt","localStorage","getItem","catch","checkToken","push","getCards","getUsers","user","Provider","removeItem","removeLikeCard","newCard","state","c","addLikeCard","removeCard","filter","exat","auth","setItem","editUser","userData","editAvatar","addCard","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3e2ce5d4.chunk.js","sourcesContent":["import React from 'react';\r\nexport const CurrentUserContext = React.createContext();","import React from 'react';\r\nexport const CardsContext = React.createContext();","import React from 'react'; \r\nimport {Switch, Link, Route } from 'react-router-dom'; \r\n \r\nfunction Header({ email, handleLogout }) { \r\n  return ( \r\n    <header className=\"header\"> \r\n      <a href=\"#\" className=\"header__logo link\" target=\"_self\" rel=\"noopener\"></a> \r\n      <Switch> \r\n        <Route exact path=\"/\"> \r\n          <ul className=\"header__nav\"> \r\n            <li><Link to=\"sign-in\" className=\"header__link link\">{email}</Link></li> \r\n            <li><button onClick={handleLogout} className=\"header__button link\">Выйти</button></li> \r\n          </ul> \r\n        </Route> \r\n        <Route path=\"/sign-up\"> \r\n          <Link className=\"header__link link\" to=\"sign-in\">Войти</Link> \r\n        </Route> \r\n        <Route path=\"/sign-in\"> \r\n          <Link className=\"header__link link\" to=\"sign-up\">Регистрация</Link> \r\n        </Route> \r\n      </Switch> \r\n    </header> \r\n  ); \r\n} \r\n \r\nexport default Header; ","import React from 'react';  \r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'; \r\n \r\nfunction Card({card, onCardClick, onCardLike, onCardDelete }) {  \r\n  const currentUser = React.useContext(CurrentUserContext); \r\n  \r\n  // Определяем, являемся ли мы владельцем текущей карточки \r\n  const isOwn = card.owner._id === currentUser._id; \r\n  const cardDeleteButtonClassName = `${isOwn && 'elements__icon-delete_active'}`;  \r\n  // Определяем, есть ли у карточки лайк, поставленный текущим пользователем \r\n  const isLiked = card.likes.some(i => i._id === currentUser._id); \r\n  const cardLikeButtonClassName = `${isLiked && 'elements__icon-favorite_active'}`; \r\n \r\n  function handleClick() {  \r\n    onCardClick(card);  \r\n  }    \r\n \r\n  function handleLikeClick() { \r\n    onCardLike(card); \r\n  } \r\n \r\n  function handleDeleteClick() { \r\n    onCardDelete(card); \r\n  } \r\n \r\n  return (  \r\n    <article className=\"elements__card\">  \r\n      <div className=\"elements__card-image\" style={{ backgroundImage: `url(${card.link})` }} onClick={handleClick}></div>  \r\n      <button className={`elements__icon-delete ${cardDeleteButtonClassName} link`} type=\"button\" aria-label=\"Удалить карточку\" onClick={handleDeleteClick}> \r\n      </button>  \r\n      <div className=\"elements__label\">  \r\n        <h2 className=\"elements__heading\">{card.name}</h2>  \r\n        <ul className=\"elements__like\">  \r\n          <li><button className={`elements__icon-favorite ${cardLikeButtonClassName} link`} type=\"button\" aria-label=\"Поставить лайк\" onClick={handleLikeClick}></button></li>  \r\n          <li><p className=\"elements__like-number\">{card.likes.length}</p></li>  \r\n        </ul>  \r\n      </div>  \r\n    </article>  \r\n  )  \r\n}  \r\n  \r\nexport default Card;  ","import React from 'react';  \r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'; \r\nimport Card from './Card'; \r\n \r\nfunction Main({ cards, onCardLike, onCardDelete, onEditAvatar, onEditProfile, onAddPlace, onCardClick }) { \r\n  const currentUser = React.useContext(CurrentUserContext); \r\n \r\n  return ( \r\n    <main className=\"content\"> \r\n      <section className=\"profile\"> \r\n        <div className=\"profile__info\"> \r\n          <button className=\"profile__button-avatar\"  \r\n             onClick={onEditAvatar} type=\"button\" aria-label=\"Редактировать аватар\"> \r\n            <div className=\"profile__avatar\" style={{ backgroundImage: `url(${currentUser.avatar})`}}></div> \r\n          </button> \r\n          <div className=\"profile__description\"> \r\n            <h1 className=\"profile__title\">{currentUser.name}</h1> \r\n            <button className=\"profile__button-edit profile__icon-edit link\"  \r\n              onClick={onEditProfile} type=\"button\" aria-label=\"Редактировать профиль\"> \r\n            </button> \r\n            <p className=\"profile__subtitle\">{currentUser.about}</p> \r\n          </div> \r\n        </div> \r\n          <button className=\"profile__button-add profile__icon-add link\"  \r\n            onClick={onAddPlace} type=\"button\" aria-label=\"Добавить данные\"> \r\n          </button> \r\n      </section> \r\n       \r\n      <section className=\"elements\">  \r\n          {cards.map(card => {  \r\n            return (  \r\n              <Card card={card} \r\n              key={card._id}  \r\n              onCardLike={onCardLike} \r\n              onCardDelete={onCardDelete} \r\n              onCardClick={onCardClick} />  \r\n            )  \r\n          })}  \r\n      </section>  \r\n    </main> \r\n  ); \r\n} \r\n \r\nexport default Main; ","import React from 'react';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <p className=\"footer__copyright\">&copy; {new Date().getFullYear()} Милана Бируля</p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;","import React from 'react'; \r\n \r\nfunction PopupWithForm({ onSubmit, isOpen, name, title, onClose, children, nameButton }) { \r\n  const popupOpened = `${isOpen && 'popup_opened'}`; \r\n  return ( \r\n    <div className={`popup ${popupOpened}`}> \r\n      <div className=\"popup__container\"> \r\n        <button className=\"popup__close link\" type=\"button\" aria-label=\"Закрыть попап\" onClick={onClose}></button> \r\n        <form className=\"popup__form\" name={name} onSubmit={onSubmit}> \r\n          <div className=\"popup__form-container\"> \r\n            <h2 className=\"popup__form-title\">{title}</h2>  \r\n            {children} \r\n          </div> \r\n          <fieldset className=\"popup__form-handlers\"> \r\n              <button type=\"submit\" className=\"popup__form-button link\">{nameButton}</button> \r\n          </fieldset> \r\n        </form> \r\n      </div> \r\n    </div> \r\n  ); \r\n} \r\n \r\nexport default PopupWithForm; ","import React from 'react'; \r\n \r\nfunction ImagePopup({ isOpen, onClose, link, name }) { \r\n  const popupOpened = `${isOpen && 'popup_opened'}`; \r\n   \r\n  return ( \r\n    <div className={`popup-image popup ${popupOpened}`}> \r\n      <div className=\"popup-image__container\"> \r\n        <button className=\"popup__close popup-image-close link\" type=\"button\" aria-label=\"Закрыть попап\" onClick={onClose}></button> \r\n        <figure className=\"popup-image__figure\"> \r\n          <img className=\"popup-image__illustration\" src={link} alt={name} /> \r\n          <figcaption><p className=\"popup-image__caption\">{name}</p></figcaption> \r\n        </figure> \r\n      </div> \r\n    </div> \r\n  ); \r\n} \r\n \r\nexport default ImagePopup; ","import React from 'react'; \r\nimport PopupWithForm from './PopupWithForm'; \r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'; \r\n \r\nfunction EditProfilePopup ({ onUpdateUser, isOpen, onClose }) { \r\n  // подписка на контекст CurrentUserContext \r\n  const currentUser = React.useContext(CurrentUserContext); \r\n \r\n  // стейт переменные для управляемых компонентов  \r\n  const [name, setName] = React.useState(''); \r\n  const [description, setDescription] = React.useState(''); \r\n \r\n  // После загрузки текущего пользователя из API \r\n  // его данные будут использованы в управляемых компонентах. \r\n  // в форму вставяться текущие значения пользователя \r\n   React.useEffect(() => { \r\n    if(Object.keys(currentUser).length || isOpen) { \r\n      setName(currentUser.name); \r\n      setDescription(currentUser.about); \r\n    } \r\n  }, [currentUser, isOpen]);  \r\n   \r\n \r\n  // Обработчик изменения инпута name, обновляет стейт \r\n  function handleChangeName(e) { \r\n    setName(e.target.value); \r\n  } \r\n \r\n  // Обработчик изменения инпута about, обновляет стейт \r\n  function handleChangeDescription(e) { \r\n    setDescription(e.target.value); \r\n  }  \r\n \r\n  // Обработчик отправки формы \r\n  function handleSubmit(e) { \r\n    e.preventDefault(); \r\n    // Передаём значения управляемых компонентов во внешний обработчик через пропс \r\n    onUpdateUser({ \r\n      name: name, \r\n      about: description \r\n    }); \r\n  } \r\n \r\n  return ( \r\n    <PopupWithForm onSubmit={handleSubmit} isOpen={isOpen} onClose={onClose} title=\"Редактировать профиль\" nameButton=\"Сохранить\" name=\"profile\"> \r\n          <fieldset className=\"popup__form-input-container\"> \r\n            <section className=\"popup__form-section\"> \r\n              <input className=\"popup__form-input\" value={name} onChange={handleChangeName} type=\"text\" name=\"name\" id=\"name\" placeholder=\"Имя\"  \r\n                minLength=\"2\" maxLength=\"40\" required /> \r\n              <span className=\"popup__form-input-error\" id=\"name-error\"></span> \r\n            </section> \r\n            <section className=\"popup__form-section\"> \r\n              <input className=\"popup__form-input\" value={description} onChange={handleChangeDescription} type=\"text\" name=\"about\" id=\"about\" placeholder=\"О себе\"  \r\n               minLength=\"2\" maxLength=\"200\" required /> \r\n              <span className=\"popup__form-input-error\" id=\"about-error\"></span> \r\n            </section> \r\n          </fieldset> \r\n      </PopupWithForm> \r\n  ); \r\n} \r\n \r\nexport default EditProfilePopup; ","import React from 'react'; \r\nimport PopupWithForm from './PopupWithForm'; \r\n \r\nfunction EditAvatarPopup ({ onUpdateAvatar, isOpen, onClose }) { \r\n  // реф для получения прямого доступа к полю link \r\n  const avatarRef = React.useRef(); \r\n \r\n  React.useEffect(() => { \r\n    if(isOpen) { \r\n      avatarRef.current.value = ''; \r\n    } \r\n  }, [isOpen]);  \r\n   \r\n \r\n  // Обработчик отправки формы \r\n  function handleSubmit(e) { \r\n    e.preventDefault(); \r\n    // Передаём значение рефа во внешний обработчик через пропс \r\n    onUpdateAvatar({ \r\n      avatar: avatarRef.current.value \r\n    }); \r\n  }  \r\n   \r\n  return( \r\n    <PopupWithForm onSubmit={handleSubmit} isOpen={isOpen} onClose={onClose} title=\"Обновить аватар\" nameButton=\"Сохранить\" name=\"avatar\"> \r\n      <fieldset className=\"popup__form-input-container\"> \r\n        <section className=\"popup__form-section\"> \r\n          <input ref={avatarRef} className=\"popup__form-input\" type=\"url\" name=\"link\" id=\"link\" placeholder=\"Ссылка на картинку\" required /> \r\n          <span className=\"popup__form-input-error\" id=\"link-error\"></span> \r\n        </section> \r\n      </fieldset> \r\n    </PopupWithForm>  \r\n  ) \r\n} \r\n \r\nexport default EditAvatarPopup; ","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction AddPlacePopup ({ onAddPlace, isOpen, onClose }) {\r\n\r\n  // стейт переменные для управляемых компонентов \r\n  const [nameCard, setNameCard] = React.useState('');\r\n  const [linkCard, setLinkCard] = React.useState('');\r\n\r\n  React.useEffect(() => {\r\n    if(isOpen) {\r\n      setNameCard('');\r\n      setLinkCard('');\r\n    }\r\n  }, [isOpen]); \r\n\r\n  // Обработчик изменения инпута namecard обновляет стейт\r\n  function handleChangeNameCard(e) {\r\n    setNameCard(e.target.value);\r\n  }\r\n\r\n  // Обработчик изменения инпута linkCard обновляет стейт\r\n  function handleChangeLinkCard(e) {\r\n    setLinkCard(e.target.value);\r\n  } \r\n\r\n  // Обработчик отправки формы\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    // Передаём значения управляемых компонентов во внешний обработчик\r\n    onAddPlace({\r\n      name: nameCard,\r\n      link: linkCard\r\n    });\r\n  }\r\n\r\n\r\n  return (\r\n    <PopupWithForm onSubmit={handleSubmit} isOpen={isOpen} onClose={onClose} title=\"Новое место\" nameButton=\"Создать\" name=\"card\">\r\n      <fieldset className=\"popup__form-input-container\">\r\n        <section className=\"popup__form-section\">\r\n          <input className=\"popup__form-input\" type=\"text\" value={nameCard} onChange={handleChangeNameCard} name=\"namecard\" id=\"namecard\" placeholder=\"Название\" \r\n            minLength=\"2\" maxLength=\"30\" required />\r\n          <span className=\"popup__form-input-error\" id=\"namecard-error\"></span>\r\n        </section>\r\n        <section className=\"popup__form-section\">\r\n          <input className=\"popup__form-input\" type=\"url\" value={linkCard} onChange={handleChangeLinkCard} name=\"linkcard\" id=\"linkcard\" placeholder=\"Ссылка на картинку\" required />\r\n          <span className=\"popup__form-input-error\" id=\"linkcard-error\"></span>\r\n        </section>\r\n      </fieldset>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default AddPlacePopup;","export default __webpack_public_path__ + \"static/media/icon-auth-error.df8eddf6.svg\";","export default __webpack_public_path__ + \"static/media/icon-auth-login.1b6082f8.svg\";","import React from 'react';\r\nimport iconErrorAuth from '../images/icon-auth-error.svg';\r\nimport iconRegisterAuth from '../images/icon-auth-login.svg';\r\n\r\nfunction InfoTooltip ({ error, isOpen, onClose }) {\r\n  const popupOpened = `${isOpen && 'popup_opened'}`;\r\n  \r\n  return (\r\n    <div className={`popup ${popupOpened}`}>\r\n      <div className=\"popup__container\">\r\n        <button className=\"popup__close link\" type=\"button\" aria-label=\"Закрыть попап\" onClick={onClose}></button>\r\n        <img className=\"popup__info-icon\" src={error ? iconErrorAuth : iconRegisterAuth} alt=\"изображение\"/>\r\n        <p className=\"popup__info-text\">{error ? \"Что-то пошло не так!\" : \"Вы успешно зарегистрировались!\"}</p>\r\n      </div>\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default InfoTooltip;\r\n","import React from 'react';\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\n// если пользователь залогинен в компонент попадут все пропсы переданные в ProtectedRoute \r\nconst ProtectedRoute = ({ component: Component, ...props  }) => {\r\n  return (\r\n    <Route>\r\n      {\r\n        () => props.loggedIn === true ? <Component {...props} /> : <Redirect to=\"./sign-in\" />\r\n      }\r\n    </Route>\r\n)}\r\n\r\nexport default ProtectedRoute;","import React from 'react';\r\n\r\nfunction Login ({ handleLogin }) {\r\n  const [data, setData] = React.useState({\r\n    email: '',\r\n    password: '',\r\n  })\r\n  \r\n  function handleChange(e) {\r\n    const {name, value} = e.target;\r\n    setData({\r\n      ...data,\r\n      [name]: value \r\n    });\r\n  }\r\n  function handleSubmit(e){\r\n    e.preventDefault();\r\n    if (!data.email || !data.password){\r\n      return;\r\n    }\r\n    const { email, password } = data;\r\n    handleLogin({ email, password });\r\n\r\n  }\r\n  \r\n    return (\r\n      <div className=\"auth\">\r\n        <form className=\"auth__form\" onSubmit={handleSubmit}>\r\n          <div className=\"auth__form-container\">\r\n            <h2 className=\"auth__form-title\">Вход</h2>\r\n            <fieldset className=\"auth__form-input-container\">\r\n              <section className=\"auth__form-section\">\r\n                <input className=\"auth__form-input\" type=\"email\" value={data.email} onChange={handleChange} name=\"email\" id=\"email\" placeholder=\"Email\" required />\r\n                <span className=\"popup__form-input-error\" id=\"email-error\"></span>\r\n              </section>\r\n              <section className=\"auth__form-section\">\r\n                <input className=\"auth__form-input\" type=\"password\" value={data.password} onChange={handleChange} name=\"password\" id=\"password\" placeholder=\"Пароль\" required />\r\n                <span className=\"popup__form-input-error\" id=\"password-error\"></span>\r\n              </section>\r\n           </fieldset>\r\n           </div>\r\n          <fieldset className=\"popup__form-handlers\">\r\n              <button type=\"submit\" className=\"auth__form-button link\">Войти</button>\r\n          </fieldset>\r\n        </form>\r\n      </div>\r\n    )\r\n \r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Register ({ handleRegister }) {\r\n  const [data, setData] = React.useState({\r\n    email: '',\r\n    password: '',\r\n    message: ''\r\n  })\r\n  \r\n  function handleChange(e) {\r\n    const {name, value} = e.target;\r\n    setData({\r\n      ...data,\r\n      [name]: value \r\n    });\r\n  }\r\n  function handleSubmit(e){\r\n    e.preventDefault();\r\n    if (!data.email || !data.password){\r\n      return;\r\n    }\r\n    const { email, password } = data;\r\n    handleRegister({ email, password });\r\n\r\n  }\r\n  \r\n    return (\r\n      <div className=\"auth\">\r\n        <form className=\"auth__form\" onSubmit={handleSubmit}>\r\n          <div className=\"auth__form-container\">\r\n            <h2 className=\"auth__form-title\">Регистрация</h2> \r\n            <fieldset className=\"auth__form-input-container\">\r\n              <section className=\"auth__form-section\">\r\n                <input className=\"auth__form-input\" type=\"email\" value={data.email} onChange={handleChange} name=\"email\" id=\"email\" placeholder=\"Email\" required />\r\n                <span className=\"popup__form-input-error\" id=\"email-error\"></span>\r\n              </section>\r\n              <section className=\"auth__form-section\">\r\n                <input className=\"auth__form-input\" type=\"password\" value={data.password} onChange={handleChange} name=\"password\" id=\"password\" placeholder=\"Пароль\" required />\r\n                <span className=\"popup__form-input-error\" id=\"password-error\"></span>\r\n              </section>\r\n            </fieldset>\r\n          </div>\r\n          <fieldset className=\"popup__form-handlers\">\r\n              <button type=\"submit\" className=\"auth__form-button link\">Зарегистрироваться</button>\r\n          </fieldset>\r\n          <fieldset className=\"auth__signin\">\r\n            <p className=\"auth__title-signin\">Уже зарегистрированы?</p>\r\n            <Link to=\"/sign-in\" className=\"auth__link-signin link\">Войти</Link>\r\n          </fieldset>\r\n        </form>\r\n      </div>\r\n    )\r\n \r\n}\r\n\r\nexport default Register;","class Api { \r\n  constructor({ address, token, groupID }) { \r\n    this._address = address; \r\n    this._token = token; \r\n    this._groupID = groupID; \r\n  } \r\n \r\n  // приватный метод, который получает ответ с сервера и возвращает данные или ошибку \r\n  _checkResponse(res) { \r\n    if (res.ok) { \r\n      // если ответ сервера 200, возвращаются данные \r\n      return res.json(); \r\n    } \r\n    // иначе возвращаем промис с ошибкой \r\n    return Promise.reject(`Ошибка ${res.status}`); \r\n  } \r\n \r\n  //публичный метод, который получает информацию о пользователе с сервера \r\n  getUsers() { \r\n    return fetch(`${this._address}/v1/${this._groupID}/users/me`, { \r\n      headers: { \r\n        authorization: this._token \r\n      } \r\n    }) \r\n      .then(this._checkResponse) \r\n  } \r\n \r\n  // метод, который отправляет запрос на сервер для загрузки карточек \r\n  getCards() { \r\n    return fetch(`${this._address}/v1/${this._groupID}/cards`, { \r\n      headers: { \r\n        authorization: this._token \r\n      } \r\n    }) \r\n      .then(this._checkResponse) \r\n  } \r\n \r\n  // метод, который отправляет запрос на сервер для редактирования данных профиля \r\n  editUser(data) { \r\n    return fetch(`${this._address}/v1/${this._groupID}/users/me`, { \r\n      method: 'PATCH', \r\n      headers: { \r\n        authorization: this._token, \r\n        'Content-type': 'application/json' \r\n      }, \r\n      body: JSON.stringify({ \r\n        name: data.name, \r\n        about: data.about \r\n      }) \r\n    }) \r\n      .then(this._checkResponse) \r\n  } \r\n \r\n  // метод добавления карточки на сервер \r\n  addCard(data) { \r\n    return fetch(`${this._address}/v1/${this._groupID}/cards`, { \r\n      method: 'POST', \r\n      headers: { \r\n        authorization: this._token, \r\n        'Content-type': 'application/json' \r\n      }, \r\n      body: JSON.stringify({ \r\n        name: data.name, \r\n        link: data.link \r\n      }) \r\n    }) \r\n      .then(this._checkResponse) \r\n  } \r\n \r\n  // метод удаления карточки \r\n  removeCard(id) { \r\n    return fetch(`${this._address}/v1/${this._groupID}/cards/${id}`, { \r\n      method: 'DELETE', \r\n      headers: { \r\n          authorization: this._token \r\n      } \r\n    }) \r\n      .then(this._checkResponse) \r\n \r\n  }  \r\n \r\n  addLikeCard(id) { \r\n    return fetch(`${this._address}/v1/${this._groupID}/cards/likes/${id}`, { \r\n      method: 'PUT', \r\n      headers: { \r\n        authorization: this._token \r\n      } \r\n    }) \r\n      .then(this._checkResponse) \r\n  } \r\n \r\n  removeLikeCard(id) { \r\n    return fetch(`${this._address}/v1/${this._groupID}/cards/likes/${id}`, { \r\n      method: 'DELETE', \r\n      headers: { \r\n        authorization: this._token \r\n      } \r\n    }) \r\n      .then(this._checkResponse) \r\n  } \r\n \r\n  editAvatar({avatar}) {  \r\n    return fetch(`${this._address}/v1/${this._groupID}/users/me/avatar`, {  \r\n      method: 'PATCH',  \r\n      headers: {  \r\n        authorization: this._token,  \r\n        'Content-type': 'application/json'  \r\n      },  \r\n      body: JSON.stringify({  \r\n        avatar: avatar,  \r\n      })  \r\n    })  \r\n      .then(this._checkResponse) \r\n  }  \r\n} \r\n \r\nconst api = new Api({ \r\n  address: 'https://mesto.nomoreparties.co', \r\n  token: '6db4154b-d992-4850-8211-1b620ba1fb44', \r\n  groupID: 'cohort-22' \r\n}); \r\n \r\nexport default api; ","export const BASE_URL = 'https://auth.nomoreparties.co'; \r\n \r\nconst checkResponse = (response) => response.ok ? response.json() : Promise.reject(`Ошибка: ${response.status}`); \r\n \r\nexport const register = (email, password) => { \r\n  return fetch(`${BASE_URL}/signup`, { \r\n    method: 'POST', \r\n    headers: { \r\n      'Content-Type': 'application/json' \r\n    }, \r\n    body: JSON.stringify({email, password}) \r\n  }) \r\n  .then(checkResponse) \r\n}; \r\n \r\nexport const authorize = (email, password) => { \r\n  return fetch(`${BASE_URL}/signin`, { \r\n    method: 'POST', \r\n    headers: { \r\n      'Content-Type': 'application/json' \r\n    }, \r\n    body: JSON.stringify({email, password}) \r\n  }) \r\n  .then(checkResponse) \r\n}; \r\n \r\nexport const getContent = (token) => { \r\n  return fetch(`${BASE_URL}/users/me`, { \r\n    method: 'GET', \r\n    headers: { \r\n      'Content-Type': 'application/json', \r\n      'Authorization': `Bearer ${token}`, \r\n    } \r\n  }) \r\n  .then(checkResponse) \r\n} ","import React from 'react'; \r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'; \r\nimport { CardsContext } from '../contexts/CardsContext'; \r\nimport { Switch, Route, Redirect, withRouter, useHistory } from 'react-router-dom'; \r\nimport Header from './Header'; \r\nimport Main from './Main'; \r\nimport Footer from './Footer'; \r\nimport PopupWithForm from './PopupWithForm'; \r\nimport ImagePopup from './ImagePopup'; \r\nimport EditProfilePopup from './EditProfilePopup'; \r\nimport EditAvatarPopup from './EditAvatarPopup'; \r\nimport AddPlacePopup from './AddPlacePopup'; \r\nimport InfoTooltip from './InfoTooltip'; \r\nimport ProtectedRoute from './ProtectedRoute'; \r\nimport Login from './Login'; \r\nimport Register from './Register'; \r\nimport api from '../utils/api'; \r\nimport * as auth from '../utils/auth'; \r\n \r\n  \r\nfunction App() { \r\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false); \r\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false); \r\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false); \r\n  const [isInfoRegisterPopupOpen, setIsInfoRegisterPopupOpen] = React.useState(false) \r\n \r\n  const [isImagePopupOpen, setIsImagePopupOpen] = React.useState(false); \r\n  const [selectedCard, setSelectedCard] = React.useState({}); \r\n \r\n  const [currentUser, setCurrentUser] = React.useState({}); \r\n  const [currentCard, setCurrentCard] = React.useState({}); \r\n \r\n  const [cards, setCards] = React.useState([]); \r\n   \r\n  // стейт который отвечает залогинен пользователь или нет \r\n  const [loggedIn, setLoggedIn] = React.useState(false); \r\n  // стейт в котором хранится email пользователя \r\n  const [userEmail, setUserEmail] = React.useState(''); \r\n  const [errorMessage, setErrorMessage] = React.useState(false); \r\n   \r\n  const history = useHistory(); \r\n \r\n  // побочный эффект \r\n  //checkToken() вызовится один раз при монтировании компонента \r\n  React.useEffect(() => { \r\n    checkToken(); \r\n  }, []) \r\n \r\n  // побочный эффект \r\n  // если loggedIn = true, произайдёт редирект на главную страницу \r\n  React.useEffect(() => { \r\n    if (loggedIn) { \r\n      history.push('/'); \r\n    } \r\n  }, [loggedIn]) \r\n \r\n  function handleError (error) { \r\n    console.log(error); \r\n  } \r\n \r\n  function handleLogin ({ email, password }) { \r\n    setUserEmail(email); \r\n    auth.authorize(email, password) \r\n    .then((res) => { \r\n      const { token } = res; \r\n      localStorage.setItem('jwt', token); \r\n      setLoggedIn(true); \r\n    }) \r\n    .catch(handleError) \r\n  } \r\n \r\n  function handleRegister ({ email, password }) { \r\n    auth.register(email, password) \r\n      .then((res) => { \r\n        const { jwt, data } = res; \r\n        const { email } = data; \r\n        localStorage.setItem('jwt', jwt); \r\n        setUserEmail(email); \r\n        setLoggedIn(true); \r\n        setErrorMessage(false); \r\n        setIsInfoRegisterPopupOpen(true); \r\n      }) \r\n      .catch((error) => { \r\n        console.log(error); \r\n        setErrorMessage(true); \r\n        setIsInfoRegisterPopupOpen(true); \r\n      }) \r\n  } \r\n \r\n  function handleLogout () { \r\n    // очищаем пользовательские данные \r\n    setUserEmail(''); \r\n    // возвращаем loggedIn в первоначальное состояние \r\n    setLoggedIn(false); \r\n    // очищаем localStorage от токена \r\n    localStorage.removeItem('jwt'); \r\n  } \r\n \r\n  // функция проверяет аутитенсифицирован ли пользователь \r\n  // получает токен из localStorage, если он не пустой получет с сервера объект со свойством email \r\n  function checkToken () { \r\n    const jwt = localStorage.getItem('jwt'); \r\n    if (jwt) { \r\n      auth.getContent(jwt) \r\n        .then(res => { \r\n          const { data } = res; \r\n          const { email } = data; \r\n          setUserEmail(email) \r\n          // пользователь залогинен \r\n          setLoggedIn(true); \r\n        }) \r\n        .catch(handleError) \r\n    } \r\n    \r\n  } \r\n   \r\n  React.useEffect(() => {  \r\n    api.getCards()  \r\n    // если ответ сервера положительный, в стейт приходит массив карточек  \r\n    // каждый объект карточки из данного массива имеет следующие поля: _id, name, link, likes  \r\n      .then(res => { \r\n        setCards(res); \r\n      })  \r\n      .catch(handleError)  \r\n  }, []);  \r\n \r\n  // функция лайка и дизлайка карточки \r\n  function handleCardLike(card) { \r\n    // Снова проверяем, есть ли уже лайк на этой карточке \r\n    const isLiked = card.likes.some(i => i._id === currentUser._id); \r\n    if (!isLiked) { \r\n      // Отправляем запрос в API и получаем обновлённые данные карточки \r\n      api.addLikeCard(card._id, !isLiked) \r\n        .then((newCard) => { \r\n          setCards((state) => state.map((c) => c._id === card._id ? newCard : c)); \r\n        }) \r\n        .catch(handleError) \r\n    } else { \r\n            api.removeLikeCard(card._id, isLiked) \r\n              .then((newCard) => { \r\n                setCards((state) => state.map((c) => c._id === card._id ? newCard : c)); \r\n              }) \r\n              .catch(handleError) \r\n           } \r\n  }  \r\n \r\n  // функция удаления карточки \r\n  function handleCardDelete(card) { \r\n    // Отправляем запрос в API и получаем обновлённые данные карточки \r\n    api.removeCard(card._id) \r\n      .then(() => { \r\n        setCards((state) => state.filter((c) => c._id !== card._id)) \r\n      }) \r\n      .catch(handleError) \r\n  } \r\n \r\n   \r\n  function handleEditProfileClick() { \r\n    setIsEditProfilePopupOpen(true); \r\n  } \r\n \r\n  function handleAddPlaceClick() { \r\n    setIsAddPlacePopupOpen(true); \r\n  } \r\n \r\n  function handleEditAvatarClick() { \r\n    setIsEditAvatarPopupOpen(true); \r\n  }  \r\n \r\n  function closeAllPopups() { \r\n    setIsEditProfilePopupOpen(false); \r\n    setIsAddPlacePopupOpen(false); \r\n    setIsEditAvatarPopupOpen(false); \r\n    setIsImagePopupOpen(false); \r\n    setIsInfoRegisterPopupOpen(false); \r\n  } \r\n \r\n  function handleCardClick(card) { \r\n    setSelectedCard(card); \r\n    setIsImagePopupOpen(true); \r\n  } \r\n \r\n  // эффект при монтировании компонента \r\n  // формирует api запрос для получения данных пользователя при загрузке страницы \r\n  React.useEffect(() => { \r\n    api.getUsers() \r\n      .then(user => { \r\n        setCurrentUser(user); \r\n      }) \r\n      .catch(handleError) \r\n  }, []) \r\n \r\n  // Обработчик api запроса для обновления профильных данных \r\n  function handleUpdateUser({ name, about }) { \r\n    api.editUser({ name, about }) \r\n      .then(userData => { \r\n        setCurrentUser(userData); \r\n        closeAllPopups(); \r\n      }) \r\n      .catch(handleError) \r\n  }  \r\n \r\n  // Обработчик api запроса для обновления аватара \r\n  function handleUpdateAvatar({avatar}) { \r\n    api.editAvatar({avatar}) \r\n      .then((userData) => { \r\n        setCurrentUser(userData); \r\n        closeAllPopups(); \r\n        }) \r\n      .catch(handleError) \r\n  } \r\n \r\n  // Обработчик api запроса для создания новой карточки \r\n  function handleAddPlaceSubmit({ name, link }) { \r\n    api.addCard({ name, link }) \r\n      .then(newCard => { \r\n        setCurrentCard(newCard); \r\n        setCards([newCard, ...cards]);  \r\n        closeAllPopups(); \r\n      }) \r\n      .catch(handleError) \r\n  } \r\n \r\n  return ( \r\n    <CurrentUserContext.Provider value={currentUser}> \r\n      <CardsContext.Provider value={currentCard}> \r\n        <div className=\"page\"> \r\n          <div className=\"root\"> \r\n            <Header email={userEmail} handleLogout={handleLogout} /> \r\n            <Switch> \r\n            \r\n              <ProtectedRoute exact path=\"/\" loggedIn={loggedIn}  \r\n                cards={cards} \r\n                onCardLike={handleCardLike} \r\n                onCardDelete={handleCardDelete} \r\n                onEditProfile={handleEditProfileClick}  \r\n                onAddPlace={handleAddPlaceClick}  \r\n                onEditAvatar={handleEditAvatarClick}  \r\n                onCardClick={handleCardClick} \r\n                component={Main}> \r\n              </ProtectedRoute> \r\n \r\n              <Route exat path=\"/sign-in\"> \r\n                <Login handleLogin={handleLogin} /> \r\n              </Route> \r\n \r\n              <Route path=\"/sign-up\"> \r\n                <Register handleRegister={handleRegister} /> \r\n              </Route> \r\n \r\n              <Route> \r\n                {loggedIn ? <Redirect to=\"/\" /> : <Redirect to=\"/sign-in\" />} \r\n              </Route> \r\n            </Switch> \r\n \r\n            <Footer /> \r\n           \r\n            <InfoTooltip error={errorMessage} isOpen={isInfoRegisterPopupOpen} onClose={closeAllPopups} />  \r\n \r\n            <EditProfilePopup onUpdateUser={handleUpdateUser} isOpen={isEditProfilePopupOpen} onClose={closeAllPopups}/> \r\n          \r\n            <EditAvatarPopup onUpdateAvatar={handleUpdateAvatar} isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups}/> \r\n          \r\n            <AddPlacePopup onAddPlace={handleAddPlaceSubmit} isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} /> \r\n \r\n            <PopupWithForm title=\"Вы уверены ?\" name=\"removecard\" nameButton=\"Да\" /> \r\n            \r\n            <ImagePopup  \r\n              isOpen={isImagePopupOpen} \r\n              card={selectedCard}  \r\n              onClose={closeAllPopups} \r\n              link={selectedCard.link} \r\n              name={selectedCard.name} /> \r\n          </div> \r\n        </div> \r\n  \r\n      </CardsContext.Provider> \r\n    </CurrentUserContext.Provider> \r\n  ); \r\n} \r\n \r\nexport default withRouter(App); ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}